<script>
require(['jquery'], function($) {
    $(document).ready(function() {
        var clientId = "<?= $block->escapeJs($block->getClientId()) ?>"; // Fetch the client ID safely

        async function initializeGSSDK() {
            var contextData = {};
            var pageType = "";
            var cart_items = <?= json_encode($block->getCartItems()) ?>;  // Get cart items as JSON

            if ("<?= $block->isHomePage() ?>") {
                pageType = 'home';
                contextData = { pageType: pageType };
            } else if ("<?= $block->isProductPage() ?>") {
                pageType = 'product_detail';
                pageType = 'product_detail';
                var productId = "<?= $block->getCurrentProductId() ?>";  // This will be the configurable ID if applicable
                var productType = "<?= $block->getCurrentProductType() ?>";

                contextData = {
                    pageType: pageType,
                    product_id: productId,  // Only the configurable ID is used here if available
                    product_type: productType,
                    provider: 'Magento_V2'
                };
            } else if ("<?= $block->isCartPage() ?>") {
                pageType = 'cart';
                contextData = { pageType: pageType, cart_items};
            } else if ("<?= $block->isCheckoutPage() ?>") {
                pageType = 'checkout';
                contextData = { pageType: pageType, cart_items};
            }

            window.gsSDK = await new window.GSSDK.default(clientId, {
                provider: 'Magento_V2',
                context: contextData
            });

            await fetchTokenAndCompare();
        }

        var gsSDKScript = document.createElement('script');
        gsSDKScript.src = 'https://sdk.gopersonal.ai/gs-sdk.js';
        gsSDKScript.onload = initializeGSSDK;
        document.head.appendChild(gsSDKScript);

        async function fetchTokenAndCompare() {
            try {
                const currentToken = await window.gsSDK.getCurrentSession().token;
                const response = await fetch(window.location.origin + '/gopersonal/api/gettoken');
                const fetchedToken = await response.text();

                if (currentToken !== fetchedToken) {
                    await fetch(`${window.location.origin}/gopersonal/api/storetoken?token=${encodeURIComponent(currentToken)}`, {
                        method: 'GET'
                    });
                }
            } catch (error) {
                console.error('Error fetching or updating token:', error);
            }
        }
    });
});
</script>
